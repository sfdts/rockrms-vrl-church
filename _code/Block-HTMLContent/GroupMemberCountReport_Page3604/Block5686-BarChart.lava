/------------------------------------------------------------
    This Lava is found in
    PageId=3604, [HTML Content] > Content

    This Lava is used to display a bar chart of the member count history for a group.

    Path:
    _code/Block-HTMLContent/GroupMemberCountReport_Page3604/Block5686-BarChart.lava
------------------------------------------------------------/

{% if PageParameter.Group and PageParameter.DateRange %}
    {% group where:'Guid == "{{ PageParameter.Group }}"' securityenabled:'false' %}
    {% endgroup %}

    {% assign range = PageParameter.DateRange | DateRangeFromSlidingFormat %}
    {% assign startRange = range.StartDate %}

    {% assign targetMonthEndDate = range.EndDate | Date:'yyyy-MM-01' | DateAdd:1,'M' | DateAdd:-1,'d' %}

    {% assign nowDateTime = 'Now' | Date %}
    {% assign currentMonth = nowDateTime | Date:'M' %}
    {% assign currentYear = nowDateTime | Date:'yyyy' %}

    {% sql return:'ChartData' %}
        WITH RecursiveMonthList AS (
            -- Start with the first month in the range
            SELECT EOMONTH('{{ startRange }}') AS 'MonthEnd'
            UNION ALL
            -- Recursively add one month until we reach the end range
            SELECT EOMONTH(DATEADD(MONTH, 1, MonthEnd))
            FROM RecursiveMonthList
            WHERE EOMONTH(DATEADD(MONTH, 1, MonthEnd)) <= EOMONTH('{{ targetMonthEndDate }}')
        ),
        MetricValuesPerMonth AS (
            SELECT
                rml.[MonthEnd] AS 'Date'
              , mv.[YValue] AS 'MemberCount'
            FROM RecursiveMonthList rml
            LEFT JOIN [MetricValue] mv ON EOMONTH(mv.[MetricValueDateTime]) = rml.[MonthEnd]
            JOIN [MetricValuePartition] mvp ON mvp.[MetricValueId] = mv.[Id]
            JOIN [MetricPartition] mp ON mp.[Id] = mvp.[MetricPartitionId]
            WHERE mv.[MetricId] = 74  -- Use the correct MetricId
            AND mvp.[EntityId] = {{ group.Id }}  -- Ensure we are matching the correct group
        )
        SELECT
            [Date]
          , [MemberCount]
        FROM [MetricValuesPerMonth]
        ORDER BY [Date];
    {% endsql %}

    {% if ChartData != empty %}
        <div class="panel panel-block">
            <div class="panel-heading">
                <h1 class="panel-title">
                    <i class="fa fa-people"></i>
                    <span> Member Count History</span>
                </h1>
            </div>
            <div class="panel-body">
                <canvas id="groupCountChart" width="400" height="100"></canvas>
            </div>
        </div>

        <script>
            var ctx = document.getElementById('groupCountChart').getContext('2d');

            var labels = [
                {% for row in ChartData %}
                    "{{ row.Date | Date:'MMMM yyyy' }}"{% if forloop.last == false %}, {% endif %}
                {% endfor %}
            ];

            var data = [
                {% for row in ChartData %}
                    {{ row.MemberCount }}{% if forloop.last == false %}, {% endif %}
                {% endfor %}
            ];

            var chartData = {
                labels,
                datasets: [{
                    label: 'Active Members',
                    data,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            };

            var myChart = new Chart(ctx, {
                type: 'bar',
                data: chartData,
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    onClick: function(evt) {
                        var activePoints = myChart.getElementsAtEventForMode(evt, 'nearest', { intersect: true }, true);
                        if (activePoints.length > 0) {
                            var index = activePoints[0].index;
                            var label = labels[index];
                            var selectedDate = new Date(label + ' 01');

                            var month = selectedDate.getMonth() + 1; // JavaScript months are 0-based
                            var year = selectedDate.getFullYear();

                            // Update URL with Month and Year parameters
                            var newUrl = new URL(window.location.href);
                            newUrl.searchParams.set('Month', month);
                            newUrl.searchParams.set('Year', year);

                            window.location.href = newUrl.toString();
                        }
                    }
                }
            });
        </script>
    {% else %}
        <p>No data available to display the chart.</p>
    {% endif %}
{% endif %}
